// <auto-generated />
using System;
using FormulaOne.Presistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormulaOne.Presistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231003095411_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FormulaOne.Domain.Entities.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberCar")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("TeamId");

                    b.ToTable("Drivers", (string)null);
                });

            modelBuilder.Entity("FormulaOne.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Persons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("269a2191-6e5e-41cc-b513-baa27c0e3dec"),
                            CountryCode = "TH",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3465),
                            CreatedBy = "SYSTEM",
                            DateOfBirth = new DateTime(1996, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Albon",
                            Name = "Alexander",
                            PlaceOfBirth = "London, England"
                        },
                        new
                        {
                            Id = new Guid("5772d1b1-3350-4b25-9030-ddfbbfa97fb8"),
                            CountryCode = "ES",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3469),
                            CreatedBy = "SYSTEM",
                            DateOfBirth = new DateTime(1981, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Alonso",
                            Name = "Fernando",
                            PlaceOfBirth = "Oviedo, Spain"
                        },
                        new
                        {
                            Id = new Guid("19867ba9-3b5d-4201-9f82-20a5948f200e"),
                            CountryCode = "FI",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3472),
                            CreatedBy = "SYSTEM",
                            DateOfBirth = new DateTime(1989, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Bottas",
                            Name = "Valtteri",
                            PlaceOfBirth = "Nastola, Finland"
                        });
                });

            modelBuilder.Entity("FormulaOne.Domain.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Chassis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FastestLaps")
                        .HasColumnType("int");

                    b.Property<int>("FirstTeamEntry")
                        .HasColumnType("int");

                    b.Property<string>("FullTeamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HighestRaceFinish")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolePositions")
                        .HasColumnType("int");

                    b.Property<string>("PowerUnit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeamChief")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TechnicalChief")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("WorldChampionships")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa9efe94-c385-46fe-8fbc-e0d683802f8e"),
                            Base = "Hinwil, Switzerland",
                            Chassis = "C43",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3405),
                            CreatedBy = "SYSTEM",
                            FastestLaps = 7,
                            FirstTeamEntry = 1993,
                            FullTeamName = "Alfa Romeo F1 Team Stake",
                            HighestRaceFinish = "1 (x1)",
                            PolePositions = 1,
                            PowerUnit = "Ferrari",
                            TeamChief = "Alessandro Alunni Bravi",
                            TechnicalChief = "James Key",
                            WorldChampionships = 0
                        },
                        new
                        {
                            Id = new Guid("14d2a9ea-5a2b-4bd2-a9a1-263fa933f74c"),
                            Base = "Faenza, Italy",
                            Chassis = "AT04",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3410),
                            CreatedBy = "SYSTEM",
                            FastestLaps = 2,
                            FirstTeamEntry = 1985,
                            FullTeamName = "Scuderia AlphaTauri",
                            HighestRaceFinish = "1 (x2)",
                            PolePositions = 1,
                            PowerUnit = "Honda RBPT",
                            TeamChief = "Franz Tost",
                            TechnicalChief = "Jody Egginton",
                            WorldChampionships = 0
                        },
                        new
                        {
                            Id = new Guid("1019065f-7e90-4ede-b5fd-066ac97a59c1"),
                            Base = "Enstone, United Kingdom",
                            Chassis = "A523",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3413),
                            CreatedBy = "SYSTEM",
                            FastestLaps = 15,
                            FirstTeamEntry = 1986,
                            FullTeamName = "BWT Alpine F1 Team",
                            HighestRaceFinish = "1 (x21)",
                            PolePositions = 20,
                            PowerUnit = "Renault",
                            TeamChief = "Bruno Famin",
                            TechnicalChief = "Matt Harman",
                            WorldChampionships = 2
                        },
                        new
                        {
                            Id = new Guid("e1fc822f-10e8-4414-8a26-dd2f1f145c19"),
                            Base = "Kannapolis, United States",
                            Chassis = "VF-23",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3417),
                            CreatedBy = "SYSTEM",
                            FastestLaps = 2,
                            FirstTeamEntry = 2016,
                            FullTeamName = "MoneyGram Haas F1 Team",
                            HighestRaceFinish = "4 (x1)",
                            PolePositions = 1,
                            PowerUnit = "Ferrari",
                            TeamChief = "Guenther Steiner",
                            TechnicalChief = "Simone Resta",
                            WorldChampionships = 0
                        },
                        new
                        {
                            Id = new Guid("e5eeb102-e899-403c-8f11-44556b9d844e"),
                            Base = "Silverstone, United Kingdom",
                            Chassis = "AMR23",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3423),
                            CreatedBy = "SYSTEM",
                            FastestLaps = 1,
                            FirstTeamEntry = 2018,
                            FullTeamName = "Aston Martin Aramco Cognizant F1 Team",
                            HighestRaceFinish = "1 (x1)",
                            PolePositions = 1,
                            PowerUnit = "Mercedes",
                            TeamChief = "Mike Krack",
                            TechnicalChief = "Dan Fallows",
                            WorldChampionships = 0
                        },
                        new
                        {
                            Id = new Guid("66f3e058-0236-477c-8c0d-a742d2968923"),
                            Base = "Woking, United Kingdom",
                            Chassis = "MCL60",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3426),
                            CreatedBy = "SYSTEM",
                            FastestLaps = 163,
                            FirstTeamEntry = 1966,
                            FullTeamName = "McLaren Formula 1 Team",
                            HighestRaceFinish = "1 (x183)",
                            PolePositions = 156,
                            PowerUnit = "Mercedes",
                            TeamChief = "Andrea Stella",
                            TechnicalChief = "Peter Prodromou / Neil Houldey",
                            WorldChampionships = 8
                        },
                        new
                        {
                            Id = new Guid("9733c471-9473-4dce-8d86-d81e6453e100"),
                            Base = "Brackley, United Kingdom",
                            Chassis = "W14",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3429),
                            CreatedBy = "SYSTEM",
                            FastestLaps = 95,
                            FirstTeamEntry = 1970,
                            FullTeamName = "Mercedes-AMG PETRONAS F1 Team",
                            HighestRaceFinish = "1 (x116)",
                            PolePositions = 129,
                            PowerUnit = "Mercedes",
                            TeamChief = "Toto Wolff",
                            TechnicalChief = "James Allison",
                            WorldChampionships = 8
                        },
                        new
                        {
                            Id = new Guid("35e84bd7-808a-4e9d-acc9-2d9ef694e3df"),
                            Base = "Grove, United Kingdom",
                            Chassis = "FW45",
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3433),
                            CreatedBy = "SYSTEM",
                            FastestLaps = 133,
                            FirstTeamEntry = 1978,
                            FullTeamName = "Williams Racing",
                            HighestRaceFinish = "1 (x114)",
                            PolePositions = 128,
                            PowerUnit = "Mercedes",
                            TeamChief = "James Vowles",
                            TechnicalChief = "TBC",
                            WorldChampionships = 9
                        });
                });

            modelBuilder.Entity("FormulaOne.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c3101e5-800c-4a31-80a7-64f52ea9e10d"),
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3177),
                            CreatedBy = "SYSTEM",
                            Password = "1234567890",
                            Role = "User",
                            UserName = "User"
                        },
                        new
                        {
                            Id = new Guid("01ec3d63-b89c-4378-8585-47884150a91d"),
                            Created = new DateTime(2023, 10, 3, 9, 54, 11, 107, DateTimeKind.Utc).AddTicks(3226),
                            CreatedBy = "SYSTEM",
                            Password = "1234567890",
                            Role = "Admin",
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("FormulaOne.Domain.Entities.Driver", b =>
                {
                    b.HasOne("FormulaOne.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormulaOne.Domain.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
